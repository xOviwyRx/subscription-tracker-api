basePath: /api/v1
definitions:
  models.CostCalculationResponse:
    properties:
      end_date:
        type: string
      service_name:
        type: string
      start_date:
        type: string
      subscriptions:
        items:
          $ref: '#/definitions/models.Subscription'
        type: array
      total_cost:
        type: integer
      user_id:
        type: string
    type: object
  models.CreateSubscriptionRequest:
    properties:
      end_date:
        description: 'Optional, Format: MM-YYYY'
        type: string
      price:
        minimum: 1
        type: integer
      service_name:
        type: string
      start_date:
        description: 'Format: MM-YYYY'
        type: string
      user_id:
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: Invalid input data
        type: string
    type: object
  models.Subscription:
    properties:
      created_at:
        type: string
      end_date:
        description: 'Optional, Format: MM-YYYY'
        type: string
      id:
        type: integer
      price:
        minimum: 1
        type: integer
      service_name:
        type: string
      start_date:
        description: 'Format: MM-YYYY'
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - price
    - service_name
    - start_date
    - user_id
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for managing user subscriptions
  title: Subscription Tracker API
  version: "1.0"
paths:
  /subscriptions:
    get:
      description: Retrieve subscriptions with optional filtering
      parameters:
      - description: Filter by user ID (UUID)
        in: query
        name: user_id
        type: string
      - description: Filter by service name
        in: query
        name: service_name
        type: string
      - description: 'Number of results to return (default: 50)'
        in: query
        name: limit
        type: integer
      - description: 'Number of results to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Subscriptions retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "400":
          description: Bad Request - Invalid query parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Failed to retrieve subscriptions
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription for a user
      parameters:
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Subscription created successfully
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request - Invalid input data or validation errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict - Duplicate subscription or constraint violation
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Database or server errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      description: Delete a subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Subscription deleted successfully
        "400":
          description: Bad Request - Invalid subscription ID format
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found - Subscription not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Database or server errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete subscription by ID
      tags:
      - subscriptions
    get:
      description: Retrieve a single subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Subscription retrieved successfully
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request - Invalid subscription ID format
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found - Subscription not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get subscription by ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Update subscription details by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to update
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Subscription updated successfully
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request - Invalid input data or validation errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found - Subscription does not exist
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict - Constraint violation during update
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Database or server errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing subscription
      tags:
      - subscriptions
  /subscriptions/calculate-cost:
    get:
      description: Calculate the total cost of subscriptions within a date range
      parameters:
      - description: Start date in MM-YYYY format
        in: query
        name: start_date
        required: true
        type: string
      - description: End date in MM-YYYY format
        in: query
        name: end_date
        required: true
        type: string
      - description: Filter by user ID (UUID)
        in: query
        name: user_id
        type: string
      - description: Filter by service name
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cost calculation completed successfully
          schema:
            $ref: '#/definitions/models.CostCalculationResponse'
        "400":
          description: Bad Request - Invalid date format or missing required parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error - Database query failed or server errors
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Calculate total cost of subscriptions
      tags:
      - subscriptions
swagger: "2.0"
